--> git.ignore 하기


@startuml
class Component{
  getDescription()
  cost()
}

class Decorator{
  c:Component
  abstract getDescription()
}


Component <|--ConcreteComponent1
Component <|--ConcreteComponent2
Component <|-- Decorator
Decorator *--> Component
Decorator --> ConcreteComponent
@enduml





client -> Beverage
Beverage -> HouseBlend:b3= new()
client -> Soy:new(b3)






interaction 작업

Welcome to DrJava.  Working directory is C:\Users\admin\Documents\oej\Code\j16\myrepo1\src
> import java.io.File;
> import java.io.File
> System.getProperty("user.home")
"C:\Users\admin"
> File myhome=new File(System.getProperty("user.home"))
> myhome
C:\Users\admin
> String cwd=new File(".").getCanonicalPath()
> cwd
"C:\Users\admin\Documents\oej\Code\j16\myrepo1\src"
> File readme=new File(cwd,"HelloWorld.java")
> readme
C:\Users\admin\Documents\oej\Code\j16\myrepo1\src\HelloWorld.java
> import java.io.FileInputStream
> FileInputStream isReadme= new FileInputStream(readme)
> isReadme.read()
112
> (char)112
'p'
> (char)isReadme.read()
'u'
> (char)isReadme.read()
'b'
> (char)isReadme.read()
'l'
> (char)isReadme.read()
'i'
> (char)isReadme.read()
'c'
> (char)isReadme.read()
' '
> (char)isReadme.read()
'c'
> (char)isReadme.read()
'l'
> (char)isReadme.read()
'a'
> (char)isReadme.read()
's'
> (char)isReadme.read()
's'
> (char)isReadme.read()
' '
> (char)isReadme.read()
'H'
> (char)isReadme.read()
'e'
> (char)isReadme.read()
'l'
> (char)isReadme.read()
'l'
> (char)isReadme.read()
'o'
> (char)isReadme.read()
'W'
> (char)isReadme.read()
'o'
> (char)isReadme.read()
'r'
> (char)isReadme.read()
'l'
> (char)isReadme.read()
'd'
> (char)isReadme.read()
'{'
> import java.io.BufferedInputStream
> BufferedInputStream bis=new BufferedInputStream(isReadme)
> bis.read()
13
> (char)13
''
> bis.read()
10
> (char)10
'
'
> import java.io.FileReader
> FileReader fr=new FileReader(readme)
> BufferedReader br=new BufferedfileReader(fr)
Static Error: Undefined class 'BufferedReader'
> import java.io.BufferedReader; // auto-import
BufferedReader br=new BufferedfileReader(fr)
Static Error: Undefined class 'BufferedfileReader'
> import BufferedfileReader; // auto-import
import java.io.BufferedReader; // auto-import
BufferedReader br=new BufferedfileReader(fr)
Static Error: Undefined class 'BufferedfileReader'
> import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import java.io.BufferedReader; // auto-import
BufferedReader br=new BufferedfileReader(fr)
Static Error: Undefined class 'BufferedfileReader'
> import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import java.io.BufferedReader; // auto-import
BufferedReader br=new BufferedfileReader(fr)
Static Error: Undefined class 'BufferedfileReader'
> import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import java.io.BufferedReader; // auto-import
BufferedReader br=new BufferedfileReader(fr)
Static Error: Undefined class 'BufferedfileReader'
> import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import java.io.BufferedReader; // auto-import
BufferedReader br=new BufferedfileReader(fr)
Static Error: Undefined class 'BufferedfileReader'
> import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import java.io.BufferedReader; // auto-import
BufferedReader br=new BufferedReader(fr)
Static Error: Undefined class 'BufferedfileReader'
> import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import java.io.BufferedReader; // auto-import
BufferedReader br=new BufferedReader(fr)
Static Error: Undefined class 'BufferedfileReader'
> import java.io.BufferedReader
> import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import java.io.BufferedReader; // auto-import
BufferedReader br=new BufferedReader(fr)
Static Error: Undefined class 'BufferedfileReader'
> import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import
import BufferedfileReader; // auto-import

Static Error: Undefined class 'BufferedfileReader'
> import java.io.BufferedReader;
> BufferedReader br=new BufferedReader(fr)
> br.readLine()
"public class HelloWorld{"
> br.readLine()
"  public static void main(String[] args){"
> br.readLine()
"    System.out.println("Hello World");"
> br.readLine()
"  }"
> br.readLine()
"}"
> br.readLine()
null
> PrintWriter out = new PrintWriter(new FileWriter("hello.txt"))
Static Error: Undefined class 'PrintWriter'
> import java.io.PrintWriter; // auto-import
PrintWriter out = new PrintWriter(new FileWriter("hello.txt"))
Static Error: Undefined class 'FileWriter'
> import java.io.FileWriter
> import java.io.PrintWriter
> import java.io.PrintWriter; // auto-import
PrintWriter out = new PrintWriter(new FileWriter("hello.txt"))
> out.printf("Hello %s","oej")
java.io.PrintWriter@3a857046
> out.close()
> 


